left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
process_gender("M")
# Funzione per elaborare i dati per un dato genere
process_gender <- function(data, gender_filter) {
years <- 2008:2018
data |>
filter(gender == gender_filter) |>
pivot_wider(names_from = year, values_from = population, names_prefix = "y_") |>
reduce(years, function(df, year) {
mutate(df, !!sym(paste0("y_", year)) := lead(y_2019, n = 2019 - year, default = 0) * maschi / lead(maschi, n = 2019 - year, default = 0))
}, .init = .)
}
# Applica la funzione a entrambi i generi
processed_m <- residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
process_gender("M")
# Funzione per elaborare i dati per un dato genere
process_gender <- function(data, gender_filter) {
years <- 2008:2018
data |>
filter(gender == gender_filter) |>
pivot_wider(names_from = year, values_from = population, names_prefix = "y_") |>
reduce(years,
.f = function(df, year) {
df |> mutate(
!!sym(paste0("y_", year)) := lead(y_2019, n = 2019 - year, default = 0) * maschi / lead(maschi, n = 2019 - year, default = 0)
)
},
.init = . # Qui si dovrebbe specificare il data frame finale che viene ritornato
)
}
# Applica la funzione a entrambi i generi
processed_m <- residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
process_gender("M")
filled_residenti <- reduce(years, function(df, year) {
mutate(df, !!sym(paste0("y_", year)) := lead(y_2019, n = 2019 - year, default = 0) * maschi / lead(maschi, n = 2019 - year, default = 0))
}, .init = filled_residenti)
filled_residenti <- residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
filter(gender == "M") |>
pivot_wider(names_from = year, values_from = population, names_prefix = "y_")
years <- 2008:2018
filled_residenti <- reduce(years, function(df, year) {
mutate(df, !!sym(paste0("y_", year)) := lead(y_2019, n = 2019 - year, default = 0) * maschi / lead(maschi, n = 2019 - year, default = 0))
}, .init = filled_residenti)
filled_residenti
filled_residenti <- residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
pivot_wider(names_from = c(gender, year), values_from = population, names_sep = "_")
filled_residenti
filled_residenti <- residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
pivot_wider(names_from = gender, values_from = px)
filled_residenti <- residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
pivot_wider(names_from = gender, values_from = px)
filled_residenti
filled_residenti <- residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
select(everything(), gender_px = gender) |>
pivot_wider(names_from = gender_px, values_from = px)
# filled_residenti <-
residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
select(everything(), gender_px = gender) |>
pivot_wider(names_from = gender_px, values_from = px)
# filled_residenti <-
residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
select(everything(), gender_px = gender) |>
pivot_wider(names_from = gender_px, values_from = px) |>
pivot_wider(names_from = c(gender, year), values_from = population, names_sep = "_")
# filled_residenti <-
residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
select(everything(), gender_px = gender) |>
pivot_wider(names_from = gender_px, values_from = px)
# filled_residenti <-
residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
mutate(gender_px = gender) |>
pivot_wider(names_from = gender_px, values_from = px)
# filled_residenti <-
residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
mutate(gender_px = gender) |>
pivot_wider(names_from = gender_px, values_from = px) |>
pivot_wider(names_from = c(gender, year), values_from = population, names_sep = "_")
# filled_residenti <-
residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
mutate(gender_px = gender) |>
pivot_wider(names_from = gender_px, values_from = px)
# filled_residenti <-
residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
mutate(gender_px = gender) |>
pivot_wider(names_from = gender_px, values_from = c(px, population))
# filled_residenti <-
residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
mutate(gender_px = gender) |>
pivot_wider(names_from = gender_px, values_from = c(px, population, gender))
# filled_residenti <-
residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
mutate(gender_px = gender) |>
pivot_wider(names_from = gender_px, values_from = c(px, population, gender)) |>
pivot_wider(names_from = c(year), values_from = population, names_sep = "_")
# filled_residenti <-
residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
mutate(gender_px = gender) |>
pivot_wider(names_from = gender_px, values_from = c(px, population, gender)) |>
pivot_wider(names_from = c(year), values_from = c(population_M, population_F))
# filled_residenti <-
residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
mutate(gender_px = gender) |>
pivot_wider(names_from = gender_px, values_from = c(px, population, gender)) |>
pivot_wider(names_from = year, values_from = c(population_M, population_F))
# filled_residenti <-
residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
pivot_wider(names_from = gender, values_from = c(px, population)) |>
pivot_wider(names_from = year, values_from = c(population_M, population_F))
# filled_residenti <-
residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
pivot_wider(names_from = gender, values_from = c(px, population)) |>
pivot_wider(names_from = year, values_from = c(population_M, population_F))
filled_residenti <-
residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
pivot_wider(names_from = gender, values_from = c(px, population)) |>
pivot_wider(names_from = year, values_from = c(population_M, population_F))
filled_residenti <- reduce(c(years, gender), function(df, year, gender) {
mutate(df, !!sym(paste0("population_", gender, "_", year)) := lead(y_2019, n = 2019 - year, default = 0) * maschi / lead(maschi, n = 2019 - year, default = 0))
}, .init = filled_residenti)
gender <- "M"
filled_residenti <- reduce(c(years, gender), function(df, year, gender) {
mutate(df, !!sym(paste0("population_", gender, "_", year)) := lead(y_2019, n = 2019 - year, default = 0) * maschi / lead(maschi, n = 2019 - year, default = 0))
}, .init = filled_residenti)
filled_residenti <- reduce(years, function(df, year) {
mutate(df, !!sym(paste0("population_", c("F", "M"), "_", year)) := lead(y_2019, n = 2019 - year, default = 0) * maschi / lead(maschi, n = 2019 - year, default = 0))
}, .init = filled_residenti)
filled_residenti
col <- paste0("population_", c("F", "M"), "_", year)
col_19 <- paste0("population_", c("F", "M"), "_2019")
col_19
filled_residenti <-
residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
pivot_wider(names_from = gender, values_from = c(px, population)) |>
pivot_wider(names_from = year, values_from = c(population_M, population_F))
filled_residenti <- reduce(years, function(df, year) {
col <- paste0("population_", c("F", "M"), "_", year)
col_19 <- paste0("population_", c("F", "M"), "_2019")
df |>
mutate(
!!sym(col[1]) := lead(col_19[1], 2019 - year, 0) * femmine / lead(femmine, 2019 - year, 0),
!!sym(col[2]) := lead(col_19[2], 2019 - year, 0) * maschi / lead(maschi, 2019 - year, 0),
)
}, .init = filled_residenti)
filled_residenti
filled_residenti <-
residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
pivot_wider(names_from = gender, values_from = c(px, population)) |>
pivot_wider(names_from = year, values_from = c(population_M, population_F))
years <- 2009:2018
gender <- "M"
filled_residenti <- reduce(years, function(df, year) {
col <- paste0("population_", c("F", "M"), "_", year)
col_19 <- paste0("population_", c("F", "M"), "_2019")
df |>
mutate(
!!sym(col[1]) := lead(col_19[1], 2019 - year, 0) * femmine / lead(femmine, 2019 - year, 0),
!!sym(col[2]) := lead(col_19[2], 2019 - year, 0) * maschi / lead(maschi, 2019 - year, 0),
)
}, .init = filled_residenti)
years <- 2018:2009
years
filled_residenti <-
residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
pivot_wider(names_from = gender, values_from = c(px, population)) |>
pivot_wider(names_from = year, values_from = c(population_M, population_F))
years <- 2018:2009
gender <- "M"
filled_residenti <- reduce(years, function(df, year) {
col <- paste0("population_", c("F", "M"), "_", year)
col_19 <- paste0("population_", c("F", "M"), "_2019")
df |>
mutate(
!!sym(col[1]) := lead(col_19[1], 2019 - year, 0) * femmine / lead(femmine, 2019 - year, 0),
!!sym(col[2]) := lead(col_19[2], 2019 - year, 0) * maschi / lead(maschi, 2019 - year, 0),
)
}, .init = filled_residenti)
filled_residenti <-
residenti |>
add_row(year = 2009:2018, .before = 1) |>
complete(age, gender, year) |>
filter(!if_any(c(age, gender), is.na)) |>
left_join(life_table, by = c("age", "gender")) |>
arrange(-year, age) |>
pivot_wider(names_from = gender, values_from = c(px, population)) |>
pivot_wider(names_from = year, values_from = c(population_M, population_F))
years <- 2018:2009
gender <- "M"
filled_residenti <- reduce(years, function(df, year) {
col <- paste0("population_", c("F", "M"), "_", year)
col_19 <- paste0("population_", c("F", "M"), "_2019")
df |>
mutate(
!!sym(col[1]) := lead(!!sym(col_19[1]), 2019 - year, 0) * femmine / lead(femmine, 2019 - year, 0),
!!sym(col[2]) := lead(!!sym(col_19[2]), 2019 - year, 0) * maschi / lead(maschi, 2019 - year, 0),
)
}, .init = filled_residenti)
filled_residenti
filled_residenti <- reduce(years, function(df, year) {
col <- paste0("population_", c("F", "M"), "_", year)
col_19 <- paste0("population_", c("F", "M"), "_2019")
df |>
mutate(
!!sym(col[1]) := lead(!!sym(col_19[1]), 2019 - year, 0) * femmine / lead(femmine, 2019 - year, 0),
!!sym(col[2]) := lead(!!sym(col_19[2]), 2019 - year, 0) * maschi / lead(maschi, 2019 - year, 0)
)
}, .init = filled_residenti) |>
mutate(across(starts_with("population", round)))
filled_residenti <- reduce(years, function(df, year) {
col <- paste0("population_", c("F", "M"), "_", year)
col_19 <- paste0("population_", c("F", "M"), "_2019")
df |>
mutate(
!!sym(col[1]) := lead(!!sym(col_19[1]), 2019 - year, 0) * femmine / lead(femmine, 2019 - year, 0),
!!sym(col[2]) := lead(!!sym(col_19[2]), 2019 - year, 0) * maschi / lead(maschi, 2019 - year, 0)
)
}, .init = filled_residenti) |>
mutate(across(starts_with("population"), round)))
filled_residenti <- reduce(years, function(df, year) {
col <- paste0("population_", c("F", "M"), "_", year)
col_19 <- paste0("population_", c("F", "M"), "_2019")
df |>
mutate(
!!sym(col[1]) := lead(!!sym(col_19[1]), 2019 - year, 0) * femmine / lead(femmine, 2019 - year, 0),
!!sym(col[2]) := lead(!!sym(col_19[2]), 2019 - year, 0) * maschi / lead(maschi, 2019 - year, 0)
)
}, .init = filled_residenti) |>
mutate(across(starts_with("population"), round))
filled_residenti
residenti
filled_residenti
filled_residenti |>
select(age, starts_with("population"))
filled_residenti |>
select(age, starts_with("population")) |>
pivot_longer(starts_with("population"))
filled_residenti |>
select(age, starts_with("population")) |>
pivot_longer(starts_with("population")) |>
separate(name, sep = "_", into = c("pop", "gender", "year"))
filled_residenti |>
select(age, starts_with("population")) |>
pivot_longer(starts_with("population")) |>
separate(name, sep = "_", into = c("pop", "gender", "year")) |>
remove(pop)
filled_residenti |>
select(age, starts_with("population")) |>
pivot_longer(starts_with("population")) |>
separate(name, sep = "_", into = c("pop", "gender", "year")) |>
select(-pop)
filled_residenti |>
select(age, starts_with("population")) |>
pivot_longer(starts_with("population")) |>
separate(name, sep = "_", into = c("pop", "gender", "year")) |>
select(-pop) |>
mutate(across(year, as.numeric)) -> residenti
data |>
left_join(residenti, by = c("gender", "year", "age")) |>
# filter(year >= 2019) |>
summarise(
ratio_donors = n() / first(population),
.by = c(gender, year, age)
) |>
filter(age < 75) |>
ggplot(aes(x = age, y = ratio_donors, fill = gender, alpha = year)) +
geom_col() +
facet_grid(rows = vars(year), cols = vars(gender)) +
scale_y_continuous(labels = scales::percent_format()) +
scale_alpha_continuous(range = c(.4, 1)) +
labs(
title = "Donors population ratio by gender and year"
) +
theme(legend.position = "none")
residenti
filled_residenti |>
select(age, starts_with("population")) |>
pivot_longer(starts_with("population"), values_to = "population") |>
separate(name, sep = "_", into = c("pop", "gender", "year")) |>
select(-pop) |>
mutate(across(year, as.numeric)) -> residenti
data |>
left_join(residenti, by = c("gender", "year", "age")) |>
# filter(year >= 2019) |>
summarise(
ratio_donors = n() / first(population),
.by = c(gender, year, age)
) |>
filter(age < 75) |>
ggplot(aes(x = age, y = ratio_donors, fill = gender, alpha = year)) +
geom_col() +
facet_grid(rows = vars(year), cols = vars(gender)) +
scale_y_continuous(labels = scales::percent_format()) +
scale_alpha_continuous(range = c(.4, 1)) +
labs(
title = "Donors population ratio by gender and year"
) +
theme(legend.position = "none")
year%%2
year%2
year %% 2
year %/% 2
year
2019%%2
data |>
left_join(residenti, by = c("gender", "year", "age")) |>
filter(year %% 4 == 0) |>
summarise(
ratio_donors = n() / first(population),
.by = c(gender, year, age)
) |>
filter(age < 75) |>
ggplot(aes(x = age, y = ratio_donors, fill = gender, alpha = year)) +
geom_col() +
facet_grid(rows = vars(year), cols = vars(gender)) +
scale_y_continuous(labels = scales::percent_format()) +
scale_alpha_continuous(range = c(.4, 1)) +
labs(
title = "Donors population ratio by gender and year"
) +
theme(legend.position = "none")
data |>
left_join(residenti, by = c("gender", "year", "age")) |>
filter(year %% 4 == 2) |>
summarise(
ratio_donors = n() / first(population),
.by = c(gender, year, age)
) |>
filter(age < 75) |>
ggplot(aes(x = age, y = ratio_donors, fill = gender, alpha = year)) +
geom_col() +
facet_grid(rows = vars(year), cols = vars(gender)) +
scale_y_continuous(labels = scales::percent_format()) +
scale_alpha_continuous(range = c(.4, 1)) +
labs(
title = "Donors population ratio by gender and year"
) +
theme(legend.position = "none")
data |>
left_join(residenti, by = c("gender", "year", "age")) |>
filter(year %% 4 == 2) |>
summarise(
ratio_donors = n() / first(population),
.by = c(gender, year, age)
) |>
filter(age < 75) |>
ggplot(aes(x = age, y = ratio_donors, fill = gender, alpha = year)) +
geom_col() +
facet_grid(rows = vars(year), cols = vars(gender)) +
scale_y_continuous(labels = scales::percent_format()) +
scale_alpha_continuous(range = c(.4, 1)) +
labs(
title = "Donors population ratio by gender and year"
) +
theme(legend.position = "none")
data |>
left_join(residenti, by = c("gender", "year", "age")) |>
filter(year %% 4 == 3) |>
summarise(
ratio_donors = n() / first(population),
.by = c(gender, year, age)
) |>
filter(age < 75) |>
ggplot(aes(x = age, y = ratio_donors, fill = gender, alpha = year)) +
geom_col() +
facet_grid(rows = vars(year), cols = vars(gender)) +
scale_y_continuous(labels = scales::percent_format()) +
scale_alpha_continuous(range = c(.4, 1)) +
labs(
title = "Donors population ratio by gender and year"
) +
theme(legend.position = "none")
data |>
left_join(residenti, by = c("gender", "year", "age")) |>
reframe(
n = n(),
.by = c(gender, year, age, class_age, population)
) |>
summarise(
ratio_donors = sum(n) / sum(population),
.by = c(year, gender, class_age)
) |>
ggplot(aes(x = year, y = ratio_donors, color = class_age)) +
geom_line() +
facet_grid(cols = vars(gender)) +
scale_y_continuous(labels = scales::percent_format()) +
labs(
title = "Donors population ratio by gender and year"
)
data <- read_csv(
here("data", "FINAL", "dataframe_cleaned.csv")
)
data
